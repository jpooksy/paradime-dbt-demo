schedules:
  - name: daily_run
    #    schedule: "@daily"
    schedule: "@weekly"
    environment: production
    commands:
      - dbt run
    owner_email: parker@paradime.io
    slack_notify:
      - "#tmp-alert-testing"
      - "@fabio"
    slack_on:
      - passed
      - failed


  {# - name: CD_run
    deferred_schedule:
      enabled: true
      deferred_schedule_name: daily_run
    schedule: "OFF"
    environment: production
    commands:
      - dbt run
    owner_email: parker@paradime.io

  - name: turbo ci job # the name of your Turbo CI job
    turbo_ci:
      enabled: true # true to enabled this Turbo CI job to run on pull request
      deferred_manifest_schedule: daily_run #the name of the bolt schedule where the Turbo CI job will look for the most recent successful run manifest.json for state comparison
      successful_run_only: false #[optional]by default paradime will look for the last successful run. Set this to false to let paradime to use defer with last run of the selected schedule, irrespective of the run status.
    schedule: "OFF" # set the schedule configuration to not run on a schedule (to be used for PR only)
    environment: production #the environment used to run the schedule -> this is always production
    commands:
      - dbt build --select state:modified+ #the dbt command you want to run when the pull request is opened
    owner_email: parker@paradime.io #the email of the Turbo CI job owner_email
    slack_on: # the configuration of when a notification is triggered. Here we want to send a notification when the run is completed either successfully or when failing
      - passed
      - failed #}
